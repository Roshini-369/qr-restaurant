{"ast":null,"code":"var _jsxFileName = \"/Users/haarika/Projects/pro2/client/src/components/insertCharacter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n//import charactersLists from \"../components/charactersLists\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InsertCharacters = () => {\n  _s();\n  const [name, setCName] = useState(null);\n  // const [error,setError] = useState(null)\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const characters = {\n      name\n    };\n    await fetch('/api/insertCharacters', {\n      method: 'POST',\n      body: JSON.stringify(characters),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(post => {\n      setCName('');\n      console.log('Data inserted successfully', post);\n      // setCName([...name,characters])\n    }).catch(err => {\n      console.log(err.message);\n    });\n\n    /*const response = await fetch('http://localhost:8000/api/insertCharacters',{\n      method: 'POST',\n      body: JSON.stringify(characters),\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    });\n      const json = await response.json();\n    if (response.ok) {\n      setCName('')\n      console.log('Data inserted successfully',json);\n      // Clear form or perform other actions as needed\n    } else {\n      //setError(json.error)\n      console.error('Error inserting data');\n    }*/\n  };\n\n  /*const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };*/\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      value: name,\n      onChange: e => setCName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-outline-success me-2\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(InsertCharacters, \"lBMaI13F1cPc9KGMtk/f6ZqzbQc=\");\n_c = InsertCharacters;\nexport default InsertCharacters;\nvar _c;\n$RefreshReg$(_c, \"InsertCharacters\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","InsertCharacters","_s","name","setCName","handleSubmit","e","preventDefault","characters","fetch","method","body","JSON","stringify","headers","then","res","json","post","console","log","catch","err","message","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","class","_c","$RefreshReg$"],"sources":["/Users/haarika/Projects/pro2/client/src/components/insertCharacter.js"],"sourcesContent":["import React, { useState } from \"react\";\n//import charactersLists from \"../components/charactersLists\";\n\nconst InsertCharacters = () => {\n    const [name, setCName] = useState(null)\n   // const [error,setError] = useState(null)\n    const handleSubmit = async(e) => {\n      e.preventDefault();\n      \n        const characters ={name};\n        \n        await fetch('/api/insertCharacters',{\n          method: 'POST',\n          body: JSON.stringify(characters),\n          headers: {\n            'Content-Type': 'application/json',\n          }\n        })\n        .then((res) => res.json())\n        .then((post) =>{\n         setCName('');\n          console.log('Data inserted successfully',post);\n         // setCName([...name,characters])\n        })\n        \n        .catch((err) => {\n           console.log(err.message)\n        })\n  \n        /*const response = await fetch('http://localhost:8000/api/insertCharacters',{\n          method: 'POST',\n          body: JSON.stringify(characters),\n          headers: {\n            'Content-Type': 'application/json',\n          }\n        });\n          const json = await response.json();\n        if (response.ok) {\n          setCName('')\n          console.log('Data inserted successfully',json);\n          // Clear form or perform other actions as needed\n        } else {\n          //setError(json.error)\n          console.error('Error inserting data');\n        }*/\n     \n    };\n  \n    /*const handleInputChange = (e) => {\n      const { name, value } = e.target;\n      setFormData({ ...formData, [name]: value });\n    };*/\n  \n    return (\n     \n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={(e) => setCName(e.target.value)}\n          />\n          <button type=\"submit\" class=\"btn btn-outline-success me-2\">Submit</button>\n        </form>\n     \n    );\n  }\n\n  export default InsertCharacters;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxC;EACC,MAAMO,YAAY,GAAG,MAAMC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAEhB,MAAMC,UAAU,GAAE;MAACL;IAAI,CAAC;IAExB,MAAMM,KAAK,CAAC,uBAAuB,EAAC;MAClCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,UAAU,CAAC;MAChCM,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACDC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAI;MACdd,QAAQ,CAAC,EAAE,CAAC;MACXe,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAACF,IAAI,CAAC;MAC/C;IACD,CAAC,CAAC,CAEDG,KAAK,CAAEC,GAAG,IAAK;MACbH,OAAO,CAACC,GAAG,CAACE,GAAG,CAACC,OAAO,CAAC;IAC3B,CAAC,CAAC;;IAEF;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEI,CAAC;;EAED;AACJ;AACA;AACA;;EAEI,oBAEIvB,OAAA;IAAMwB,QAAQ,EAAEnB,YAAa;IAAAoB,QAAA,gBAC3BzB,OAAA;MACE0B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,MAAM;MAClBC,KAAK,EAAEzB,IAAK;MACZ0B,QAAQ,EAAGvB,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACwB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFlC,OAAA;MAAQ0B,IAAI,EAAC,QAAQ;MAACS,KAAK,EAAC,8BAA8B;MAAAV,QAAA,EAAC;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtE,CAAC;AAGb,CAAC;AAAAhC,EAAA,CA/DGD,gBAAgB;AAAAmC,EAAA,GAAhBnC,gBAAgB;AAiEpB,eAAeA,gBAAgB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}